name: CI - Build & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build, Type Check, and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Build project
        run: npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Error: Uncommitted changes detected"
            git status
            exit 1
          fi

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true

  verify-vercel-config:
    name: Verify Vercel Configuration
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate vercel.json
        run: |
          if [ -f vercel.json ]; then
            echo "Vercel config found, validating JSON..."
            cat vercel.json | jq empty
          else
            echo "No vercel.json found"
            exit 1
          fi

      - name: Check for Edge Runtime exports
        run: |
          echo "Checking API routes for Edge Runtime exports..."
          FILES=$(find app/api -name "route.ts" -type f)
          MISSING_RUNTIME=()

          for file in $FILES; do
            if ! grep -q "export const runtime = 'edge'" "$file"; then
              MISSING_RUNTIME+=("$file")
            fi
          done

          if [ ${#MISSING_RUNTIME[@]} -gt 0 ]; then
            echo "Error: Following routes missing Edge Runtime export:"
            printf '%s\n' "${MISSING_RUNTIME[@]}"
            exit 1
          else
            echo "All API routes have Edge Runtime export ✅"
          fi

      - name: Verify environment example
        run: |
          if [ ! -f .env.example ]; then
            echo "Warning: .env.example not found"
            exit 1
          fi
          echo ".env.example exists ✅"

  status-check:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [build-and-test, lint, security, verify-vercel-config]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.build-and-test.result }}" != "success" ] || \
             [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.verify-vercel-config.result }}" != "success" ]; then
            echo "CI failed - one or more checks did not pass"
            exit 1
          fi
          echo "All CI checks passed ✅"
